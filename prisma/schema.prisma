generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  goals      Goal[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Goal {
  id           String           @id @default(cuid())
  title        String
  valueTarget  Int
  currentValue Int
  colorCard    String
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  ownerId      String
  completions  GoalCompletion[]
  owner        User             @relation(fields: [ownerId], references: [id])
  Transaction  Transaction[]

  @@map("goals")
}

model GoalCompletion {
  id        String   @id @default(cuid())
  goalId    String
  createdAt DateTime @default(now())
  goal      Goal     @relation(fields: [goalId], references: [id])

  @@map("goal_completions")
}

model Transaction {
  id          String          @id @default(cuid())
  type        TransactionType
  amount      Int
  title       String
  description String
  goalId      String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  goal        Goal?           @relation(fields: [goalId], references: [id])

  @@map("transactions")
}

enum TransactionType {
  income
  expense
}
